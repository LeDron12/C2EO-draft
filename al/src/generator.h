#ifndef __GENERATOR__
#define __GENERATOR__

#include <string>
#include <vector>

//-------------------------------------------------------------------------------------------------
// Абстрактный генератор кода на всякий случай
// Возможно придется связывать динамически разные генераторы в общий список или массив
struct AbstractGen {
    virtual void Generate() = 0;
};

//-------------------------------------------------------------------------------------------------
// Генератор кода для глобальных переменных
// накапливая необходимые значения в соответствующих строках
struct GlobalVarGen: AbstractGen {
    std::string name;       // идентификатор переменной
    std::string type;       // тип переменной
    std::string value;      // значение переменной
    void Generate();
};

//-------------------------------------------------------------------------------------------------
// Генератор кода для глобального пространства
// Наряду с константной оберкой обеспечивает запись глобальных объектов
struct GlobalSpaceGen: AbstractGen {
    void Generate();
};

//-------------------------------------------------------------------------------------------------
// Генератор кода приложения
// Используется для формирования кода, запускающего программу
struct ApplicationGen {
    void Generate();
};


// Класс Generator. Собирает все воедино
struct Generator {
    void Generate();
};

#endif // __GENERATOR__
