<?xml version="1.0" encoding="UTF-8"?>
<program ms="296"
         name="app.eo"
         time="2021-09-15T11:32:17.355347Z"
         version="0.1.19">
   <listing>+package test09
+alias stdout org.eolang.io.stdout
+alias sprintf org.eolang.txt.sprintf

# Попытка выполнить цикл
[] &gt; app
  memory &gt; i
  seq &gt; @
    i.write 1
    while.
      less.
        i
        10
      seq
        stdout
          sprintf
            "i = %d"
            i
        i.write (i.add 1)
&lt;EOF&gt;</listing>
   <errors/>
   <sheets>
      <sheet>not-empty-atoms</sheet>
      <sheet>middle-varargs</sheet>
      <sheet>duplicate-names</sheet>
      <sheet>many-free-attributes</sheet>
      <sheet>broken-aliases</sheet>
      <sheet>duplicate-aliases</sheet>
      <sheet>one-body</sheet>
      <sheet>same-line-names</sheet>
      <sheet>self-naming</sheet>
      <sheet>add-refs</sheet>
      <sheet>wrap-method-calls</sheet>
      <sheet>vars-float-up</sheet>
      <sheet>add-refs</sheet>
      <sheet>resolve-aliases</sheet>
      <sheet>resolve-aliases</sheet>
      <sheet>add-default-package</sheet>
      <sheet>broken-refs</sheet>
      <sheet>unknown-names</sheet>
      <sheet>noname-attributes</sheet>
      <sheet>globals-to-abstracts</sheet>
      <sheet>remove-refs</sheet>
      <sheet>abstracts-float-up</sheet>
      <sheet>remove-levels</sheet>
      <sheet>add-refs</sheet>
      <sheet>fix-missed-names</sheet>
      <sheet>broken-refs</sheet>
      <sheet>pre-classes</sheet>
      <sheet>pre-junit</sheet>
      <sheet>pre-attrs</sheet>
      <sheet>pre-varargs</sheet>
      <sheet>pre-data</sheet>
      <sheet>to-java</sheet>
   </sheets>
   <metas>package test09;

<meta line="2">
         <head>alias</head>
         <tail>stdout org.eolang.io.stdout</tail>
         <part>stdout</part>
         <part>org.eolang.io.stdout</part>
      </meta>
      <meta line="3">
         <head>alias</head>
         <tail>sprintf org.eolang.txt.sprintf</tail>
         <part>sprintf</part>
         <part>org.eolang.txt.sprintf</part>
      </meta>
   </metas>
   <objects>
      <class java-name="EOapp" line="6" name="app" original-name="app">
         <java>
/*
 * This file was auto-generated by eolang-maven-plugin
 * on 2021-09-15T14:32:23.096+03:00. Don't edit it,
 * your changes will be discarded on the next build.
 * The sources were compiled to XML on
 * 2021-09-15T11:32:17.355347Z by the EO compiler v.0.1.19.
 */

package test09;

import org.eolang.*;
import org.eolang.phi.*;

public final class EOapp extends PhDefault {
  public EOapp() {
    this(new PhEta());
  }
  public EOapp(final Phi parent) {
    super(parent);
    this.add("i", new AtBound(new AtOnce(new AtLambda(this, self -&gt; {
      Phi ret = new org.eolang.EOmemory(self);
      return ret;
    }))));
    this.add("φ", new AtBound(new AtOnce(new AtLambda(this, self -&gt; {
      Phi ret = new org.eolang.EOseq(self);
      ret = new PhCopy(ret);
        Phi ret_1_base = new PhMethod(self, "i");
        Phi ret_1 = new PhMethod(ret_1_base, "write");
        ret_1 = new PhCopy(ret_1);
          Phi ret_1_1 = new org.eolang.EOint(self);
          ret_1_1 = new PhCopy(ret_1_1);
            ret_1_1 = new PhWith(ret_1_1, "Δ", new Data.Value&lt;Long&gt;(1L));
          ret_1 = new PhWith(ret_1, 0, ret_1_1);
        Phi ret_2_base_base = new PhMethod(self, "i");
        Phi ret_2_base = new PhMethod(ret_2_base_base, "less");
        ret_2_base = new PhCopy(ret_2_base);
          Phi ret_2_base_1 = new org.eolang.EOint(self);
          ret_2_base_1 = new PhCopy(ret_2_base_1);
            ret_2_base_1 = new PhWith(ret_2_base_1, "Δ", new Data.Value&lt;Long&gt;(10L));
          ret_2_base = new PhWith(ret_2_base, 0, ret_2_base_1);
        Phi ret_2 = new PhMethod(ret_2_base, "while");
        ret_2 = new PhCopy(ret_2);
          Phi ret_2_1 = new org.eolang.EOseq(self);
          ret_2_1 = new PhCopy(ret_2_1);
            Phi ret_2_1_1 = new org.eolang.io.EOstdout(self);
            ret_2_1_1 = new PhCopy(ret_2_1_1);
              Phi ret_2_1_1_1 = new org.eolang.txt.EOsprintf(self);
              ret_2_1_1_1 = new PhCopy(ret_2_1_1_1);
                Phi ret_2_1_1_1_1 = new org.eolang.EOstring(self);
                ret_2_1_1_1_1 = new PhCopy(ret_2_1_1_1_1);
                  ret_2_1_1_1_1 = new PhWith(ret_2_1_1_1_1, "Δ", new Data.Value&lt;String&gt;("i = %d"));
                Phi ret_2_1_1_1_2 = new PhMethod(self, "i");
                ret_2_1_1_1 = new PhWith(ret_2_1_1_1, 0, ret_2_1_1_1_1);
                ret_2_1_1_1 = new PhWith(ret_2_1_1_1, 1, ret_2_1_1_1_2);
              ret_2_1_1 = new PhWith(ret_2_1_1, 0, ret_2_1_1_1);
            Phi ret_2_1_2_base = new PhMethod(self, "i");
            Phi ret_2_1_2 = new PhMethod(ret_2_1_2_base, "write");
            ret_2_1_2 = new PhCopy(ret_2_1_2);
              Phi ret_2_1_2_1_base = new PhMethod(self, "i");
              Phi ret_2_1_2_1 = new PhMethod(ret_2_1_2_1_base, "add");
              ret_2_1_2_1 = new PhCopy(ret_2_1_2_1);
                Phi ret_2_1_2_1_1 = new org.eolang.EOint(self);
                ret_2_1_2_1_1 = new PhCopy(ret_2_1_2_1_1);
                  ret_2_1_2_1_1 = new PhWith(ret_2_1_2_1_1, "Δ", new Data.Value&lt;Long&gt;(1L));
                ret_2_1_2_1 = new PhWith(ret_2_1_2_1, 0, ret_2_1_2_1_1);
              ret_2_1_2 = new PhWith(ret_2_1_2, 0, ret_2_1_2_1);
            ret_2_1 = new PhWith(ret_2_1, 0, ret_2_1_1);
            ret_2_1 = new PhWith(ret_2_1, 1, ret_2_1_2);
          ret_2 = new PhWith(ret_2, 0, ret_2_1);
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    }))));
  }
}
</java>
      </class>
   </objects>
</program>
