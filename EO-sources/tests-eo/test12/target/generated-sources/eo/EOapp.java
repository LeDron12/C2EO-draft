
/*
 * This file was auto-generated by eolang-maven-plugin
 * on 2021-09-16T14:28:21.421+03:00. Don't edit it,
 * your changes will be discarded on the next build.
 * The sources were compiled to XML on
 * 2021-09-16T11:28:15.592140Z by the EO compiler v.0.1.19.
 */

package test12;

import org.eolang.*;
import org.eolang.phi.*;

public final class EOapp extends PhDefault {
  public EOapp() {
    this(new PhEta());
  }
  public EOapp(final Phi parent) {
    super(parent);
    this.add("i", new AtBound(new AtOnce(new AtLambda(this, self -> {
      Phi ret = new EOvarInt(self);
      return ret;
    }))));
    this.add("φ", new AtBound(new AtOnce(new AtLambda(this, self -> {
      Phi ret = new org.eolang.EOseq(self);
      ret = new PhCopy(ret);
        Phi ret_1_base = new PhMethod(self, "i");
        Phi ret_1 = new PhMethod(ret_1_base, "set");
        ret_1 = new PhCopy(ret_1);
          Phi ret_1_1 = new org.eolang.EOint(self);
          ret_1_1 = new PhCopy(ret_1_1);
            ret_1_1 = new PhWith(ret_1_1, "Δ", new Data.Value<Long>(1L));
          ret_1 = new PhWith(ret_1, 0, ret_1_1);
        Phi ret_2_base_base_base = new PhMethod(self, "i");
        Phi ret_2_base_base = new PhMethod(ret_2_base_base_base, "get");
        Phi ret_2_base = new PhMethod(ret_2_base_base, "less");
        ret_2_base = new PhCopy(ret_2_base);
          Phi ret_2_base_1 = new org.eolang.EOint(self);
          ret_2_base_1 = new PhCopy(ret_2_base_1);
            ret_2_base_1 = new PhWith(ret_2_base_1, "Δ", new Data.Value<Long>(10L));
          ret_2_base = new PhWith(ret_2_base, 0, ret_2_base_1);
        Phi ret_2 = new PhMethod(ret_2_base, "while");
        ret_2 = new PhCopy(ret_2);
          Phi ret_2_1 = new org.eolang.EOseq(self);
          ret_2_1 = new PhCopy(ret_2_1);
            Phi ret_2_1_1 = new org.eolang.io.EOstdout(self);
            ret_2_1_1 = new PhCopy(ret_2_1_1);
              Phi ret_2_1_1_1 = new org.eolang.txt.EOsprintf(self);
              ret_2_1_1_1 = new PhCopy(ret_2_1_1_1);
                Phi ret_2_1_1_1_1 = new org.eolang.EOstring(self);
                ret_2_1_1_1_1 = new PhCopy(ret_2_1_1_1_1);
                  ret_2_1_1_1_1 = new PhWith(ret_2_1_1_1_1, "Δ", new Data.Value<String>("i = %d"));
                Phi ret_2_1_1_1_2_base = new PhMethod(self, "i");
                Phi ret_2_1_1_1_2 = new PhMethod(ret_2_1_1_1_2_base, "get");
                ret_2_1_1_1 = new PhWith(ret_2_1_1_1, 0, ret_2_1_1_1_1);
                ret_2_1_1_1 = new PhWith(ret_2_1_1_1, 1, ret_2_1_1_1_2);
              ret_2_1_1 = new PhWith(ret_2_1_1, 0, ret_2_1_1_1);
            Phi ret_2_1_2_base = new PhMethod(self, "i");
            Phi ret_2_1_2 = new PhMethod(ret_2_1_2_base, "write");
            ret_2_1_2 = new PhCopy(ret_2_1_2);
              Phi ret_2_1_2_1_base = new org.eolang.EOint(self);
              ret_2_1_2_1_base = new PhCopy(ret_2_1_2_1_base);
                ret_2_1_2_1_base = new PhWith(ret_2_1_2_1_base, "Δ", new Data.Value<Long>(1L));
              Phi ret_2_1_2_1 = new PhMethod(ret_2_1_2_1_base, "add");
              ret_2_1_2_1 = new PhCopy(ret_2_1_2_1);
                Phi ret_2_1_2_1_1_base = new PhMethod(self, "i");
                Phi ret_2_1_2_1_1 = new PhMethod(ret_2_1_2_1_1_base, "get");
                ret_2_1_2_1 = new PhWith(ret_2_1_2_1, 0, ret_2_1_2_1_1);
              ret_2_1_2 = new PhWith(ret_2_1_2, 0, ret_2_1_2_1);
            ret_2_1 = new PhWith(ret_2_1, 0, ret_2_1_1);
            ret_2_1 = new PhWith(ret_2_1, 1, ret_2_1_2);
          ret_2 = new PhWith(ret_2, 0, ret_2_1);
        ret = new PhWith(ret, 0, ret_1);
        ret = new PhWith(ret, 1, ret_2);
      return ret;
    }))));
  }
}
