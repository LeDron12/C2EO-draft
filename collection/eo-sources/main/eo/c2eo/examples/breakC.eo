+package c2eo.examples

+alias c2eo.stdio.printf
+alias c2eo.ctypes.c_int32
+alias c2eo.ctypes.c_bool

[args] > breakC

  [a] > breakOrReturn

    c_int32 > a1
    c_int32 > result
    c_bool > isBreak
    c_bool > isReturn

    if. > @
      seq
        a1.write a
        isBreak.write 0
        isReturn.write 0
        while.
          TRUE.and (isBreak.not) (isReturn.not)
          [i]
            seq > @
              if.
                (^.a1.mod 5).eq 0
                seq
                  ^.isBreak.write 1
                seq
              if.
                (^.a1.mod 3).eq 0
                seq
                  ^.isReturn.write 1
                  ^.result.write 1
                seq
              if.
                ^.isReturn
                seq
                  ^.a1.write (^.a1.add 1)
                seq
        if.
          isReturn
          seq
          if.
            seq
              printf "We broke out of the loop\n"
            result.write 0
            seq

      result
      seq

  [] > main

    c_int32 > a
    c_int32 > result

    seq > @
      a.write (^.args.get 0).as-int
      result.write (^.breakOrReturn a)
      printf "breakOrReturn = %d" result
